"""add_integer"""

import function from module:

   >>> add_integer = __import__('0-add_integer').add_integer
  
test one int argument:

   >>> add_integer(2)
   100

test one int argument and check defailt second:

   >>> add_integer(0)
   98

test one float:
   >>> add_integer(123.9)
   221

test two integers:

   >>> add_integer(10, 5)
   15

test two big integers:

   >>> add_integer(7777777, 88888888)
   96666665

Test positive, negative integers:

   >>> add_integer(3, -6)
   -3

Test negative, positive integers:

   >>> add_integer(-10, 11)
   1

Test an integer and a float:

   >>> add_integer(123, 3.99)
   126

Test a float and an integer:

   >>> add_integer(3.99, 123)
   126

Test two floats:

   >>> add_integer(1.5, 1.5)
   2

Add infinity:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Add nan:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Test first arg invalid:

    >>> add_integer("foo", 0)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test second arg invalid:

    >>> add_integer(123123, [])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Test both args invalid:

    >>> add_integer(None, None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test two strings:

    >>> add_integer("foo", "bar")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test float overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
